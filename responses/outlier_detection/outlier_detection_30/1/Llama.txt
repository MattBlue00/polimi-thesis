To perform outlier detection on the given dataset, we'll use the Interquartile Range (IQR) method and the Z-score method. We'll focus on the numerical columns: `price`, `bed`, `bath`, `acre_lot`, `house_size`.

```python
import pandas as pd
import numpy as np

# Load the dataset
data = {
    # ... your data here ...
}

df = pd.DataFrame(data)

# Define the numerical columns
numerical_cols = ['price', 'bed', 'bath', 'acre_lot', 'house_size']

# Calculate Q1 and Q3 for each numerical column
Q1 = df[numerical_cols].quantile(0.25)
Q3 = df[numerical_cols].quantile(0.75)

# Calculate IQR for each numerical column
IQR = Q3 - Q1

# Define the lower and upper bounds for outliers
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

# Identify outliers using IQR
outliers_iqr = df[(df[numerical_cols] < lower_bound).any(axis=1) | (df[numerical_cols] > upper_bound).any(axis=1)]

# Calculate Z-scores for each numerical column
z_scores = np.abs((df[numerical_cols] - df[numerical_cols].mean()) / df[numerical_cols].std())

# Identify outliers using Z-scores (threshold: 3 standard deviations)
outliers_z_score = df[(z_scores > 3).any(axis=1)]

# Print the results
print("Outliers using IQR method:")
print(outliers_iqr)
print("\nOutliers using Z-score method:")
print(outliers_z_score)
```

This code will identify outliers in the dataset using both the IQR method and the Z-score method. The IQR method is more robust to non-normal data, while the Z-score method assumes normality.

Please note that you need to replace the `data` dictionary with your actual dataset.

Also, keep in mind that outlier detection is not a one-size-fits-all solution. The choice of method depends on the specific characteristics of your data and the goals of your analysis.

### Example Use Case

Suppose we want to analyze the `price` column for outliers. We can use the IQR method to identify values that are more than 1.5 times the IQR away from the first quartile (Q1) or third quartile (Q3).

```python
# Calculate Q1 and Q3 for the 'price' column
Q1_price = df['price'].quantile(0.25)
Q3_price = df['price'].quantile(0.75)

# Calculate IQR for the 'price' column
IQR_price = Q3_price - Q1_price

# Define the lower and upper bounds for outliers
lower_bound_price = Q1_price - 1.5 * IQR_price
upper_bound_price = Q3_price + 1.5 * IQR_price

# Identify outliers in the 'price' column
outliers_price = df[(df['price'] < lower_bound_price) | (df['price'] > upper_bound_price)]

# Print the results
print("Outliers in the 'price' column:")
print(outliers_price)
```

This code will identify values in the `price` column that are considered outliers using the IQR method.