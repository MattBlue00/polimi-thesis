```python
import pandas as pd
import numpy as np

# Create the DataFrame
data = {
    'brokered_by': [
        np.nan, 81316, 96817, 53673, 10437, 19903, 20385, 22792, 104873,
        104876, 58970, 51274, 94681, 'Robert Haley', 53138, 52946, 687,
        103967, 81316, 2765, 78460, 53232, 22916, 57424, 81112,
        'Joseph Antonoff', 92736, 68269, 32769, 84529, 75073, 22217, 65293,
        7689, 78247, 105798, 'Charles Smith', 26012, 96014, 48807, 55214,
        53556, 'Richard Haley', '-', 84529, 26543, 22671, 10726, 56699,
        78075, 81824, 3479, 97679, 29538, 109950, 75016, 53016, 48807,
        21986, np.nan, 53377, 8, 'Robert Miller', 'David Haley', 45807,
        16829, 101497, 53556, 10649, 5145, 53592, 107955, 78200, 15757,
        16829, 86329, 81112, 16829, 22611, 57424, 34888, 'Joseph Smith',
        22611, 108243, 4630, 22792, 23017, 81031, 51274, 45913, 106177,
        22562, 109978, 76215, 81671, 109987, 28222, 85655, 78167, 19415,
        'William Miller', 33901, 94681, np.nan, 79245, 53177, np.nan, 82978,
        22721, 52946
    ],
    'status': [
        'for_sale', 'sold', np.nan, 'for_sale', 'sold', 'sold', 'for_sale', 's',
        'for_sale', 's', 'sold', 'for_sale', 'sold', 'for_sale', 'sold',
        'for_sale', 'sold', '-', 'sold', 'sold', 'f', 'for_sale', 'sold',
        'for_sale', 'for_sale', 'sold', 'for_sale', 'sold', 'for_sale', 'f',
        'for_sale', 'sold', np.nan, 's', 'sold', 'for_sale', 'sold', 'sold',
        'sold', 'for_sale', np.nan, 'for_sale', 'sold', 'for_sale', 'f',
        'sold', 'sold', 'for_sale', 's', 'sold', 'sold', 'sold', 'sold',
        'for_sale', 'sold', 'sold', 'sold', 'for_sale', 'sold', 'f', 's',
        'for_sale', 'sold', 'for_sale', 'for_sale', 'sold', 'sold',
        'for_sale', 'for_sale', 'sold', 'for_sale', 'sold', 'for_sale',
        'for_sale', 'sold', 's', 's', 'sold', 'for_sale', 's', 'sold',
        'sold', 'for_sale', 'sold', 'sold', 'for_sale', 'sold', 'sold',
        'for_sale', 'sold', 'sold', 'for_sale', 'for_sale', 'sold', 's',
        'for_sale', 'sold'
    ],
    'price': [
        265000, '$749000', 425000, 112900, 350000, '$849500', np.nan, 525000,
        888000, 398000, np.nan, '$774000', 409900, np.nan, '-', 
        '$150000', 355000, 635000, '$749000', 585000, 278900, 330000,
        376000, 999000, 115900, 249900, 175000, 389854, '$1300000',
        1075000, 375000, 898000, 725000, 98500, 339900, 155990, 479900,
        259900, '$370000', 375000, 509900, 375000, 689900, 550000,
        1075000, 600000, 90000, np.nan, 249900, 280000, 292677, 419000,
        440000, 1150000, '$225000', 317900, 239000, 410987, 269900,
        np.nan, 189900, 517300, 350000, 2365000, 375000, '-', 129900,
        400609, 219900, 750000, 619900, 2199000, '-', 69900, 350000,
        699000, 115900, 372029, 215000, '$935000', '$389000', 279900,
        280000, 499000, 519950, 541664, 240000, 219000, '$774000',
        '$250000', 399500, np.nan, 760000, 339000, 325000, 490000,
        2450000, 249900, 350000, 309000, 539900, 225000, 409900, 385000,
        599900, 105000, '-', 335000, 799999, 163646
    ],
    'bed': [
        1, '-', np.nan, 9999, 3, 3, 5, 3, 4, np.nan, 9999, 6, 2, 1, 3, 4,
        3, 3, '-', 3, 3, 2, 4, 4, 3, 3, 3, 2, 3, 3, 9999, 3, 4, 3, 4, 3,
        4, 9999, 3, 3, 5, '-', 3, 3, '-', 3, 3, 2, 9999, 5, 3, 3, 2,
        9999, 2, 9999, 3, 4, 9999, 6, 4, 5, 3, 4, 3, 9999, 9999, 4,
        np.nan, 4, 4, 3, 5, 0, 3, 4, 3, 3, 3, 4, 3, 3, - , 3, 3, 3, 5,
        2, np.nan, '-', 5, '-', 3, 3, 4
    ],
    'bath': [
        1, 0, 3, 2, 2, np.nan, 3, 2, 4, 2, 4, 4, 1, 0, 3, np.nan, np.nan, 3,
        0, 3, 0, 1, 3, 1, 2, 2, 2, '-', 3, np.nan, 2, 3, 1, 2, 3, 2, 2,
        2, 0, 3, 3, 3, 0, 2, 3, '-', 2, 2, 2, 3, 3, 4, 3, 2, np.nan, 2,
        2, 1, 3, 3, 2, np.nan, 1, 6, 2, 5, 2, 6, 2, 3, 2, 4, 3, 2, 0, 0,
        5, 1, 2, 2, 2, 0, 0, 2, 5, 3, 2, 2, 4, 4, 1, 2, np.nan, 2, -, 2,
        2, 4, 2
    ],
    'acre_lot': [
        0.03, 0.27, 0.06, 0.5, 1.07, 0.18, 0.37, -0.94, 0.21, 0.11, 0.23,
        0.35, 2.12, 0.58, 0.22, 10.0, '-', 0.23, '-', 4.44, 0.7, 0.3, 0.28,
        -1.51, 0.15, np.nan, -0.74, 0.15, 27.59, 0.06, -0.16, 0.21, np.nan,
        9.0, 0.28, 0.21, 0.13, 0.13, 0.12, 0.2, 0.2, 0.3, '-', 0.22, 0.06,
        -1.46, 0.09, 0.83, 0.29, 0.06, np.nan, 0.3, 0.07, 0.37, 0.23, 0.22,
        np.nan, 0.2, 0.17, 0.14, -0.47, 35.0, 0.9, 0.19, np.nan, -1.08,
        1.95, 0.3, 0.2, 0.19, 2.1, 0.3, 0.15, 0.17, '-', 0.15, np.nan, 0.15,
        '-', 0.12, 0.16, 0.22, 0.16, 0.19, 0.18, 0.13, -0.94, 0.2, 0.31,
        0.35, 0.86, 0.27, 0.15, 0.36, 0.34, 8.36, 0.16, 0.19, -0.63, 0.15,
        np.nan, np.nan, -1.56, 2.12, 0.23, 0.42, 0.24, 0.22, 0.18, 0.15,
        10.0
    ],
    'street': [
        '-', '285 Center Ln', np.nan, '169 Meadow St', '70 Cedar Dr',
        '249 South Pl', '217 Church Ln', '977 Adams Blvd', '210 Church Ln',
        '981 Harbor Ave', '828 Spring St', '668 Maple Ave', '655 First St',
        '949 Franklin Blvd', '47 Lincoln Rd', '675 Circle Dr', '272 Terrace Ln',
        '885 Washington Avenue', '285 Center Ln', '699 Wilson Dr',
        '95 Meadow Ave', np.nan, '73 Franklin Rd', '277 Princess Dr',
        '380 Valley Ln', '672 West Pl', np.nan, '144 Terrace Blvd',
        '550 Second Pl', np.nan, '766 Church St', '52 North Blvd',
        '715 Terrace Dr', '272 Broadway Ln', '676 South Blvd', '195 Spring Ave',
        '-', '391 Bridge Road', '224 Lincoln St', '88 East Ave',
        '603 Princess St', '611 Hill Pl', '920 Field Dr', '81 Roosevelt Dr',
        np.nan, '763 Adams Place', '553 Third Ct', '226 Square Road',
        '115 Roosevelt Pl', '686 East Ln', '63 Field Dr', '864 Lake Lane',
        '82 Lincoln Ave', '223 Lake St', '414 Second Ln', '168 Bridge Pl',
        '829 Main Boulevard', '88 East Ave', '614 Garden Ct', '368 Shore Rd',
        '286 Bridge Ln', '624 River Ln', '693 Ridge Pl', '-', '157 Market Pl',
        '400 Adams Ct', np.nan, '611 Hill Pl', '430 Church Rd',
        '59 Park Boulevard', '779 Third Blvd', '20 First Dr', '688 Garfield Ct',
        '520 View Rd', '219 Field St', '347 Oak Ln', '380 Valley Ln',
        '219 Field St', '995 Maple Ave', '409 Wood Ct', np.nan, '593 Elm Ave',
        '952 King Rd', '197 Meadow Ct', '-', '977 Adams Blvd', '922 Square Ave',
        '73 Lake Ln', '668 Maple Ave', '94 Washington Ave', np.nan,
        '272 Farm Blvd', '760 Madison Ln', '60 Franklin Ave', '651 Vista Blvd',
        '229 Broadway Ave', '687 Wilson Ave', '159 Meadow Rd', '324 Sunset St',
        '820 View Ln', '293 Terrace Ct', '417 East Ct', '655 First St',
        '390 Madison Ct', '254 Princess Ave', '434 Court Ct', np.nan,
        '71 Hill Ln', '900 Baker Lane', '675 Circle Dr'
    ],
    'city': [
        'Marathon', 'Fairfax', 'Alexandria', 'Mount Pleasant', 'Cumming',
        'Houston', np.nan, 'Westford', 'Houston', 'Chicago', 'Kensington',
        'Saratoga Springs', 'Stockbridge', 'Palisade', 'Vienna', 'Hulbert',
        'Orlando', 'Iselin', 'Fairfax', 'Crossville', 'Somerset', np.nan,
        'Jacksonville', 'Livermore', 'Fairborn', 'Stuarts Draft', 'Owasso',
        'Caldwell', 'Julian', 'Tustin', 'Columbus', 'Alhambra', 'Sparks',
        'Budapest', 'Troy', 'Albany', 'Windsor', 'Berlin', 'Spokane',
        'San Antonio', 'San Jacinto', 'Wichita', np.nan,
        'Charlottesville', 'Tustin', 'Melbourne', 'Saint Louis', 'Brewster',
        '-', 'Reno', 'Sumter', 'Lisbon', 'Charlotte', 'Long Beach',
        'Fort Worth', 'Kirkwood', 'Oak Ridge', 'San Antonio', 'Pooler',
        np.nan, 'Saint Louis', 'Cheyenne', np.nan, 'Vienna',
        'New Middletown', 'Port Washington', 'Eastover', 'Wichita',
        'Allison Park', 'Meridian', 'Mchenry', 'Madrid', 'Akron', 'Enid',
        'Prague', np.nan, 'Fairborn', 'Prague', 'Calumet City', 'Budapest',
        'Houston', np.nan, 'Monroeville', 'Kennewick', 'Huntsville',
        'Westford', 'Moses Lake', 'Prague', 'Saratoga Springs', 'Queensbury',
        '-', 'Dearborn Heights', 'Escondido', 'Bella Vista', 'Plato',
        'Corpus Christi', 'Los Angeles', 'Scituate', 'Saint Louis Park',
        'Ojibwa', 'Skaneateles', np.nan, 'Stockbridge', 'North Port', '-',
        'Woodward', 'Leland', 'Temple', 'Natick', 'Hulbert'
    ],
    'state': [
        'Florida', 'Virginia', np.nan, 'Michigan', 'Georgia', 'Texas',
        'North Carolina', np.nan, 'TX', '-', 'Maryland', 'Utah',
        'Massachusetts', 'Colorado', 'Maryland', 'Oklahoma', 'Florida',
        'New Jersey', 'Virginia', 'Tennessee', 'Kentucky', 'New York', 'NC',
        'California', 'Ohio', np.nan, 'Oklahoma', 'Idaho', 'California',
        'California', 'Ohio', 'California', 'Nevada', 'Michigan', 'Illinois',
        'Indiana', '-', 'Montana', 'Washington', 'Texas', 'California',
        'Kansas', 'Virginia', 'Virginia', 'California', 'Florida',
        'Missouri', 'Massachusetts', 'Missouri', 'Nevada', 'South Carolina',
        np.nan, 'NC', 'California', 'Texas', 'Missouri', 'Tennessee', 'Texas',
        np.nan, 'Florida', 'Missouri', 'Wyoming', '-', 'MN', 'Ohio',
        'New York', 'SC', 'Kansas', 'Pennsylvania', 'Idaho', 'Illinois',
        'Massachusetts', 'Ohio', 'OK', 'Texas', 'Alabama', 'Ohio', 'Texas',
        'Illinois', 'California', 'Texas', 'Wisconsin', np.nan, np.nan,
        'Alabama', np.nan, 'Washington', 'PA', 'Utah', 'New York', 'Georgia',
        np.nan, 'California', 'Arkansas', 'Missouri', 'Texas', 'California',
        'Rhode Island', 'Minnesota', 'Wisconsin', 'New York', 'Indiana',
        'Massachusetts', 'Florida', 'Iowa', 'Oklahoma', 'NC', 'Texas',
        'Massachusetts', 'Oklahoma'
    ],
    'zip_code': [
        33050, 22030, 22309, 48858, 30041, 77030, 28467, np.nan, 77082,
        60659, 20895, 84, 1262, 81526, 20720, np.nan, 32828, 8830, 22030,
        np.nan, 42503, 12401, 28546, '-', 45324, np.nan, 74055, 83, 92036,
        92782, 43206, 91803, 89441, 48621, 62294, 47320, 80550, 59405,
        99207, 78254, 92583, 67207, 22180, 22903, 92782, 32934, 63, 2631,
        63011, 89506, 29154, 75060, 28210, np.nan, 76133, '-', 37, 78254,
        31, 33542, 63114, 82007, 25425, 55424, 44442, 11050, np.nan, 67207,
        15101, np.nan, 60, np.nan, 44314, 73701, 77021, 36092, 45324,
        77021, 60409, 95337, 77, 53704, 15146, np.nan, 35801, np.nan, 98,
        '-', 84, 12804, 31405, 48125, 92026, 72714, 65552, 78418, 90064,
        28, 55426, 54862, 13152, 46140, 1262, 34, 52722, 73801, 28451,
        76502, '-', 73801
    ],
    'house_size': [
        321, 2948, '-', np.nan, 1681,
        7.712063820018365e-05, 3058, 2211,
        0.00014907598714416896, 1171, 2500, 3625, 1015, 987, 2375,
        np.nan, 1864, 2000, 2948, 3352, 1923, 1062, 3162, 1785, 1116,
        1827, 1144, 1574, 986, 1928, 1328, 1465, 1876, 2064, np.nan, '-',
        2638, np.nan, np.nan, 2346, 2383, 2696, np.nan, 1512, 1928,
        0.00010961891643709825, 1152, 1368, 2037, 851, 3040, 3110, 2053,
        1409, 1552, 2032, 1724, 2346, np.nan, 1694, 1624, 3018, 3220,
        4905, 1747, 5828, 2128, 2696, 1188, 2796, 4145, 3650,
        5.595730027548209e-05, 1333, 1626, 4758, np.nan, 1626, 1304,
        3789, 1696, 1699, 1874, 2289,
        9.964703856749312e-05, 2211, 1670, 1189, 3625, 1883, '-', 1960,
        6.772268135904499e-05, 2035, 1784, 2416, '-', 4.6989784205693296e-05,
        1908, 2025, 1918, np.nan, 1015, 1708, 3765, 2036,
        0.00010965478650137742, 8.407943067033976e-05, 3422, np.nan
    ],
    'prev_sold_date': [
        '2004-09-20', '2021-12-10', '2022-02-04', '2012-08-13', '2022-02-23',
        '2021-12-31', np.nan, '2021-11-19', np.nan, '2021-11-30',
        '2021-12-30', '2019-04-19', '11/29/21', '2006-07-06', '2022-01-04',
        '2018-04-19', '2021-12-08', '2019-02-28', '2021-12-10', '2022-04-15',
        '-', '2014-07-01', '2022-04-25', np.nan, '2020-08-03', '2022-02-14',
        '2017-12-29', '2021-12-17', '2020-05-15', '2011-11-14', '2020-07-06',
        '2022-04-08', '2004-09-10', '04/14/22', '01/26/22', '2020-06-19',
        '2022-03-18', '2021-11-09', '2022-04-05', '2004-05-14', '2022-05-03',
        '2021-11-12', '2022-04-22', '2011-09-29', np.nan, '2022-01-21',
        '2022-03-24', '2001-07-06', '03/04/22', '2021-11-19', '2021-12-22',
        '2021-12-09', '2022-03-07', '2016-06-10', '2022-01-19', '2021-11-23',
        '-', '2004-05-14', '2021-12-30', '2019-04-25', '2022-01-18',
        '2022-10-31', '2021-12-10', '2021-12-30', '1991-04-17', '2017-05-05',
        '2021-09-20', '2021-11-12', '2022-04-13', '2022-01-10', '2020-04-02',
        '1992-10-22', '2022-02-09', '2016-06-09', np.nan, '2015-02-19',
        '2020-08-03', np.nan, '2013-08-15', '02/18/22', '2021-12-16',
        '2021-12-17', '2022-04-19', '2022-03-30', '2020-03-09', '2021-11-19',
        '2022-03-09', '2021-11-24', '2019-04-19', '11/23/21', '2002-06-03',
        '2010-10-14', '-', '2021-12-07', '2021-12-17', '2019-04-03',
        '2022-02-22', '2022-02-04', '2022-04-01', '2020-02-04', '2015-06-15',
        '07/26/17', '11/29/21', '03/18/22', '2016-11-21', '2007-06-29',
        '04/22/22', '-', '2022-04-05', '2018-04-19'
    ]
}

df = pd.DataFrame(data)

# Convert price to numeric
df['price'] = df['price'].replace('$', '', regex=True).str.replace('-', '', regex=True)
df['price'] = pd.to_numeric(df['price'])

# Replace inconsistent values in status column with NaN
df['status'] = df['status'].replace(['-', 's', 'f'], np.nan)

# Replace inconsistent values in bed, bath, acre_lot, and house_size columns with NaN
for col in ['bed', 'bath', 'acre_lot', 'house_size']:
    df[col] = df[col].replace([ '-', 9999,  7.712063820018365e-05, 0.00014907598714416896, 5.595730027548209e-05, 0.00010961891643709825, 0.00010965478650137742, 8.407943067033976e-05, 9.964703856749312e-05, 6.772268135904499e-05, 4.6989784205693296e-05], np.nan)

# Remove rows where the state is '-' or 'MN'
df = df[~df['state'].isin(['-', 'MN'])]

# Replace inconsistent values in street column with NaN
df['street'] = df['street'].replace(['-'], np.nan)

# Convert prev_sold_date to datetime
df['prev_sold_date'] = pd.to_datetime(df['prev_sold_date'], errors='coerce')

# Print the cleaned DataFrame
print(df)
```