Data standardization is a process of transforming data to have a mean of zero and a standard deviation of one. This is often done to ensure that each feature contributes equally to the analysis, especially in machine learning algorithms. To standardize the dataset, we typically focus on numerical columns. Here's a step-by-step guide on how to standardize the numerical columns in your dataset:

1. **Identify Numerical Columns**: First, identify which columns are numerical. In your dataset, the columns `price`, `bed`, `bath`, `acre_lot`, `house_size`, and possibly `zip_code` are numerical. However, `zip_code` is typically a categorical feature, so it might not be appropriate to standardize it.

2. **Handle Missing or Incorrect Data**: Before standardizing, ensure that all numerical data is correctly formatted and handle any missing values. For instance, the `price` column has some values with a dollar sign, and the `bed` and `bath` columns have some non-numeric entries like "three" and "one". These need to be converted to numeric values.

3. **Convert Data Types**: Convert all numerical columns to a consistent data type, such as `float`.

4. **Standardize the Data**: For each numerical column, subtract the mean and divide by the standard deviation.

Here's a Python example using pandas to standardize the dataset:

```python
import pandas as pd
from sklearn.preprocessing import StandardScaler

# Load the dataset
data = pd.read_csv('your_dataset.csv')  # Replace with your actual data loading method

# Clean the data
# Remove dollar signs and convert to float
data['price'] = data['price'].replace({'\$': '', ',': ''}, regex=True).astype(float)

# Convert 'bed' and 'bath' to numeric, handling non-numeric entries
data['bed'] = pd.to_numeric(data['bed'], errors='coerce')
data['bath'] = pd.to_numeric(data['bath'], errors='coerce')

# Fill or drop missing values if necessary
data.fillna(data.mean(), inplace=True)

# Select numerical columns for standardization
numerical_cols = ['price', 'bed', 'bath', 'acre_lot', 'house_size']

# Initialize the StandardScaler
scaler = StandardScaler()

# Standardize the numerical columns
data[numerical_cols] = scaler.fit_transform(data[numerical_cols])

# Display the standardized data
print(data.head())
```

This code snippet assumes you have a CSV file of your dataset. It uses `pandas` for data manipulation and `sklearn.preprocessing.StandardScaler` for standardization. Make sure to handle any non-numeric entries and missing values appropriately before standardizing.